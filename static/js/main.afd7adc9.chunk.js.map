{"version":3,"sources":["serviceWorker.js","containers/Home/Home.jsx","utils/PlanetContext.js","componentes/NavButton/NavButton.jsx","componentes/Plantilla/Plantilla.jsx","componentes/Planet/Planet.jsx","containers/ElementPicker/ElementPicker.jsx","componentes/AppSlider/AppSlider.jsx","containers/DiameterPicker/DiameterPicker.jsx","containers/RotationPicker/RotationPicker.jsx","containers/Galery/Galery.jsx","containers/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","homeButton","boxSizing","backgroundColor","borderStyle","borderWidth","borderRadius","fontSize","fontStyle","textTransform","fontWeight","color","position","bottom","left","transform","bodyHome","width","height","backgroundImage","backgroundSize","backgroundPosition","display","flexDirection","justifyContent","alignItems","panelContainer","objectFit","maxWidth","planetasHome","tierraHome","top","nubesTierraHome","animation","animationDirection","AmarilloHome","nubesAmarilloHome","marteHome","nubesMarteHome","animationDelay","nose","bannerDesk","bannerMobile","Home","classes","className","src","alt","Button","component","Link","to","PlanetContext","React","config","id","element","elementAtmos","sizePlanet","sizeAtmosphere","senseRotation","velRotation","setConfig","planetList","setPlanetList","root","NavButton","text","link","globalContext","edition","setEdition","v4","onClick","chosen","findIndex","elem","editado","slice","splice","plantilla","margin","border","padding","content","opciones","order","visualizar","marginBottom","marginTop","editar","navegar","titulo","textAlign","flexFlow","mainTitle","fontFamily","subNavegar","Plantilla","instruction","children","back","next","Typography","container","planet","atmosphere","animationDuration","Planet","body","flexWrap","elementPick","subOne","paddingTop","subTwo","paddingBottom","subImage","nueva","water","justWater","fire","ElementPicker","checkA","setCheckA","checkB","setCheckB","handleChangeB","event","target","checked","Switch","onChange","track","thumb","nuevoThumb","marginLeft","nuevoTrack","borderColor","boxShadow","nuevoRail","nuevoRoot","title","sliderCont","trackImage","AppSlider","value","min","max","Slider","rail","DiameterPicker","ev","newValue","leftButton","marginRight","rightButton","RotationPicker","disableRipple","planetGalery","alignContent","overflow","paddingRight","background","elementGalery","edit","backgroundRepeat","delete","right","contPreview","Galery","history","useHistory","selected","setSelected","map","key","handleClick","push","elemId","handleDelete","App","useState","useEffect","listString","localStorage","getItem","JSON","parse","setItem","stringify","console","log","Provider","path","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4CCZAC,EAAYC,YAAW,CAEzBC,WAAY,CACRC,UAAW,aACXC,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,WAEnBC,YAAa,QACbC,YAAa,MACbC,aAAc,OAEdC,SAAU,SACVC,UAAW,SACXC,cAAe,YACfC,WAAY,MACZC,MAAO,QAEPC,SAAU,WACVC,OAAQ,KACRC,KAAM,MACNC,UAAW,gBAGX,4BAA6B,CAEzBF,OAAQ,KACRC,KAAM,KACNC,UAAW,iBAOnBC,SAAU,CAENC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,uCACjBC,eAAgB,QAChBC,mBAAoB,SAEpBC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAIhBC,eAAgB,CAEZT,MAAO,MACPL,SAAU,WAEN,QAAS,CAELe,UAAW,UACXC,SAAU,QAIlB,6BAA8B,CAE1BX,MAAO,OAIX,4BAA6B,CAEzBA,MAAO,QAQfY,aAAc,CACVjB,SAAU,YAIdkB,WAAY,CACRC,IAAK,MACLjB,KAAM,MACNG,MAAO,OAGXe,gBAAiB,CACbf,MAAO,MACPc,IAAK,MACLjB,KAAM,MACNmB,UAAU,6BACVC,mBAAoB,WAKxBC,aAAc,CAEVJ,IAAK,MACLjB,KAAM,MACNG,MAAO,MAEP,4BAA6B,CAEzBc,IAAK,MACLjB,KAAM,MACNG,MAAO,QAWfmB,kBAAmB,CACfL,IAAK,MACLjB,KAAM,MACNG,MAAO,MACPgB,UAAW,6BAEX,4BAA6B,CAEzBF,IAAK,MACLjB,KAAM,MACNG,MAAO,QAKfoB,UAAW,CACPN,IAAK,MACLjB,KAAM,OACNG,MAAO,QAIXqB,eAAgB,CACZP,IAAK,MACLjB,KAAM,MACNG,MAAO,MACPgB,UAAW,4BACXM,eAAgB,QAGpBC,KAAM,CACFvB,MAAO,MACPc,IAAK,MACLjB,KAAM,MACNmB,UAAW,8BAKfQ,WAAW,CAEPnB,QAAS,QAET,4BAA6B,CAEzBA,QAAS,SASjBoB,aAAc,CAEVpB,QAAS,OAET,4BAA6B,CAEzBA,QAAS,UAWjB,kBAAmB,CAEf,OAAQ,CAAEP,UAAW,qBAShB4B,EAAO,WAEhB,IAAMC,EAAU7C,IAEhB,OAAO,uBAAK8C,UAAWD,EAAQ5B,UAE3B,uBAAK6B,UAAWD,EAAQlB,gBAEpB,uBAAKoB,IAAI,6BAA6BD,UAAWD,EAAQH,WAAYM,IAAI,KACzE,uBAAKD,IAAI,mCAAmCD,UAAWD,EAAQF,aAAcK,IAAI,KAEjF,uBAAKD,IAAI,2BAA2BD,UAAWD,EAAQf,aAAc,IAAMe,EAAQJ,KAAMO,IAAI,KAE7F,uBAAKD,IAAI,kCAAkCD,UAAWD,EAAQf,aAAc,IAAMe,EAAQd,WAAYiB,IAAI,KAC1G,uBAAKD,IAAI,uCAAuCD,UAAWD,EAAQf,aAAc,IAAMe,EAAQZ,gBAAiBe,IAAI,KAEpH,uBAAKD,IAAI,4BAA4BD,UAAWD,EAAQf,aAAc,IAAMe,EAAQP,UAAWU,IAAI,KACnG,uBAAKD,IAAI,iCAAiCD,UAAWD,EAAQf,aAAc,IAAMe,EAAQN,eAAgBS,IAAI,KAE7G,uBAAKD,IAAI,2CAA2CD,UAAWD,EAAQf,aAAc,IAAMe,EAAQT,aAAcY,IAAI,KACrH,uBAAKD,IAAI,2CAA2CD,UAAWD,EAAQf,aAAc,IAAMe,EAAQR,kBAAmBW,IAAI,KAE1H,gBAACC,EAAA,EAAD,CAAQH,UAAWD,EAAQ3C,WAAYgD,UAAWC,IAAMC,GAAG,kBAA3D,Y,uBCpOCC,EAAgBC,gBAAoB,CAE7CC,OAAQ,CAEJC,GAAG,GACHC,QAAS,GACTC,aAAc,GACdC,WAAW,GACXC,eAAe,GACfC,cAAc,GACdC,YAAY,IAGhBC,UAAW,kBAAM,MACjBC,WAAY,GACZC,cAAe,kBAAK,Q,QCPlBjE,EAAYC,YAAW,CACzBiE,KAAM,CACJ/D,UAAW,aACXC,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,WAEnBC,YAAa,QACbC,YAAa,MACbC,aAAc,OAEdC,SAAU,SACVC,UAAW,SACXC,cAAe,YACfC,WAAY,MACZC,MAAO,QAEPO,OAAQ,OACRD,MAAO,SAKAiD,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAExBxB,EAAU7C,IACVsE,EAAgBhB,aAAiBD,GAHC,EAKVC,WAAe,GALL,mBAKjCiB,EALiC,KAKxBC,EALwB,KA6D5ClB,aAAgB,WAEH,QAAPc,IAE4B,KAA3BE,EAAcf,OAAOC,IAEtBc,EAAcP,UAAd,eACKO,EAAcf,OADnB,CAEEC,GAAIiB,iBAGND,EAAW,IAKbA,EAAW,MAMb,IA6DE,OACI,gBAACvB,EAAA,EAAD,CAAQyB,QA3DK,WAEnB,GAAW,QAAPN,IAEW,IAAVG,IAEDD,EAAcL,cAAd,sBACKK,EAAcN,YADnB,CAEE,CAEER,GAAIc,EAAcf,OAAOC,GACzBC,QAASa,EAAcf,OAAOE,QAC9BC,aAAcY,EAAcf,OAAOG,aACnCC,WAAYW,EAAcf,OAAOI,WACjCC,eAAgBU,EAAcf,OAAOK,eACrCC,cAAeS,EAAcf,OAAOM,cACpCC,YAAaQ,EAAcf,OAAOO,gBAKtCQ,EAAcP,UAAU,CAEtBP,GAAI,GACJC,QAAS,gCACTC,aAAc,yBACdC,WAAW,GACXC,eAAe,GACfC,cAAc,SACdC,YAAY,OAOF,IAAVS,GAAa,CAEf,IAAMI,EAASL,EAAcN,WAAWY,WAAU,SAACC,GACjD,OAAOA,EAAKrB,KAAOc,EAAcf,OAAOC,MAItCsB,EAAUR,EAAcN,WAAWe,QACzCD,EAAQE,OAAOL,EAAO,EAAEL,EAAcf,QACtCe,EAAcL,cAAca,GAC5BR,EAAcP,UAAd,eACKO,EAAcf,OADnB,CAEEC,GAAG,QAW8BV,UAAWD,EAAQqB,KAAMhB,UAAWC,IAAMC,GAAIiB,GAC3ED,IC3KJpE,EAAYC,YAAW,CACzBgF,UAAW,CACT9E,UAAW,aACX+E,OAAQ,EACRC,OAAQ,EACR5E,aAAc,EACd6E,QAAS,MACTvE,SAAU,WACVK,MAAO,MACPC,OAAQ,MACRI,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAGhB,6BAA8B,CAE5BP,MAAO,OAIX,6BAA8B,CAE1BA,MAAO,OAIX,4BAA6B,CAEzBC,OAAQ,SAOZkE,QAAS,CAELnE,MAAO,OACPC,OAAQ,MACRI,QAAS,OACTC,cAAe,MAEfC,eAAgB,gBAEhB,4BAA6B,CAEzBD,cAAe,SACfL,OAAQ,SAMhBmE,SAAU,CAENpE,MAAO,MACPC,OAAQ,OAERI,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChB8D,MAAO,EAEP,4BAA6B,CAEzBrE,MAAO,OACPqE,MAAO,IAMfC,WAAY,CAERtE,MAAO,SACPC,OAAQ,OACRhB,UAAW,aACXC,gBAAiB,UACjBC,YAAa,QACbC,YAAa,MACbC,aAAc,OACdK,MAAO,QAEPQ,gBAAiB,6CACjBC,eAAgB,QAChBC,mBAAoB,SACpBiE,MAAO,EACPE,aAAc,MAEd,4BAA6B,CAEzBvE,MAAO,OACPqE,MAAO,EACPE,aAAc,OACdC,UAAW,OACXvE,OAAQ,UAMhBwE,OAAQ,CAEJzE,MAAO,OACPC,OAAQ,MACRN,SAAU,WAEVV,UAAW,aACXC,gBAAiB,UAEjBC,YAAa,QACbC,YAAa,MACbC,aAAc,OAEdC,SAAU,SACVC,UAAW,SACXE,WAAY,MACZC,MAAO,QAEP,4BAA6B,CAEzB6E,aAAc,SAMtBG,QAAS,CAEL1E,MAAO,OACPC,OAAQ,MACRI,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAGhB,4BAA6B,CAEzBgE,aAAc,SAMtBI,OAAQ,CAEJ3E,MAAO,OACPC,OAAQ,MAERhB,UAAW,aACXC,gBAAiB,UACjBC,YAAa,QACbC,YAAa,MACbC,aAAc,OACdK,MAAO,QAEPkF,UAAU,SACVvE,QAAS,OACTwE,SAAU,cACVtE,eAAgB,SAEhB,4BAA6B,CAEzBN,OAAQ,OACRuE,UAAW,SAOnBM,UAAW,CAEPxF,SAAU,SACVC,UAAW,SACXE,WAAY,MACZC,MAAO,QACPF,cAAe,YACfuF,WAAY,gCAIhBC,WAAY,CAERhF,MAAO,OACPC,OAAQ,OACRI,QAAS,OACTC,cAAe,MACfC,eAAgB,mBAOX0E,EAAY,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAE9C1D,EAAU7C,IAGhB,OAAO,uBAAK8C,UAAWD,EAAQoC,WAG/B,uBAAKnC,UAAWD,EAAQgD,QACxB,gBAACW,EAAA,EAAD,CAAY1D,UAAWD,EAAQmD,WAAYI,IAG3C,uBAAKtD,UAAWD,EAAQwC,SAEpB,uBAAKvC,UAAWD,EAAQyC,UAExB,uBAAKxC,UAAWD,EAAQ8C,QACnBU,EAAS,IAEd,uBAAKvD,UAAWD,EAAQ+C,SAEZ,YAAPW,EAEC,uBAAKzD,UAAWD,EAAQqD,YACtB,gBAAC,EAAD,CAAW9B,KAAK,OAAOC,KAAMiC,EAAMzF,SAAS,aAE5C,gBAAC,EAAD,CAAWuD,KAAK,MAAMC,KAAMkC,EAAM1F,SAAS,cAItC,MAAP0F,EACD,uBAAMzD,UAAWD,EAAQqD,YAI1B,gBAAC,EAAD,CAAW9B,KAAK,YAAYC,KAAMkC,EAAM1F,SAAS,cAIhD,uBAAMiC,UAAWD,EAAQqD,YAEtB,gBAAC,EAAD,CAAW9B,KAAK,OAAOC,KAAMiC,EAAMzF,SAAS,aAE5C,gBAAC,EAAD,CAAWuD,KAAK,OAAOC,KAAMkC,EAAM1F,SAAS,gBAcpD,uBAAKiC,UAAWD,EAAQ2C,YACvBa,EAAS,O,QClQZrG,EAAYC,YAAW,CAEzBwG,UAAW,CAEP5F,SAAU,WACVK,MAAO,OACPC,OAAQ,OAERI,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,UAIpBiF,OAAQ,CAEJ7F,SAAU,WACVmB,IAAK,MACLjB,KAAM,MACNC,UAAW,wBAEXE,MAAO,qBAAGyC,YACVxC,OAAQ,QAIZwF,WAAY,CAER9F,SAAU,WACVK,MAAO,qBAAG0C,gBACVzC,OAAQ,OAERe,UAAU,wBACV0E,kBAAmB,qBAAG9C,aACtB3B,mBAAoB,qBAAG0B,gBAI3B,kBAAmB,CAEf,OAAQ,CAAE7C,UAAW,qBAOhB6F,EAAS,SAAC,GAAwF,IAAvFpD,EAAsF,EAAtFA,QAAQC,EAA8E,EAA9EA,aAAcC,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,YAE/EjB,GAFoG,EAARW,GAElFxD,EAAU,CAAC2D,aAAWC,iBAAeC,gBAAcC,iBAEnE,OAAO,uBAAKhB,UAAWD,EAAQ4D,WAG3B,uBAAK3D,UAAWD,EAAQ6D,OAAQ3D,IAAKU,EAAST,IAAI,KAClD,uBAAKF,UAAWD,EAAQ8D,WAAY5D,IAAKW,EAAcV,IAAI,OCpD7DhD,EAAYC,YAAW,CAErB6G,KAAM,CAEF5F,MAAO,QACPC,OAAQ,QACRI,QAAS,OACTC,cAAe,GACfuF,SAAU,SACVtF,eAAgB,SAChBC,WAAY,SAEZN,gBAAiB,0CACjBC,eAAgB,QAChBC,mBAAoB,SAGpB,4BAA6B,CAEzBH,OAAQ,SAMhB6F,YAAa,CAET9F,MAAO,OACPC,OAAQ,OACRhB,UAAW,cAIf8G,OAAQ,CAEJ/F,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZwF,WAAY,MAGhBC,OAAQ,CAEJjG,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZ0F,cAAe,MAInBC,SAAU,CAENlG,OAAQ,MACRD,MAAO,OAEP,4BAA6B,CAEzBC,OAAQ,OACRD,MAAO,QAMfoG,MAAO,CACHlH,gBAAiB,QAIrBmH,MAAO,CAEH,qBAAsB,CAElB3G,MAAO,WAIX,uBAAwB,CACpBR,gBAAiB,oBAKzBoH,UAAW,CAEP5G,MAAO,UACP,uBAAwB,CACpBR,gBAAiB,oBAMzBqH,KAAM,CACF7G,MAAO,UACP,uBAAwB,CACpBR,gBAAiB,sBAMpBsH,EAAgB,WAGzB,IAAMpD,EAAgBhB,aAAiBD,GAHR,EAKHC,YAAe,GALZ,mBAKxBqE,EALwB,KAKhBC,EALgB,OAMHtE,YAAe,GANZ,mBAMxBuE,EANwB,KAMhBC,EANgB,KAkEzBC,EAAgB,SAACC,GAEnBF,EAAUE,EAAMC,OAAOC,SAEnBP,EAEIE,EAEAvD,EAAcP,UAAd,eACOO,EAAcf,OADrB,CAEIE,QAAS,gCACTC,aAAc,wCAMlBY,EAAcP,UAAd,eACOO,EAAcf,OADrB,CAEIE,QAAS,kCACTC,aAAc,0CAQlBmE,EAEAvD,EAAcP,UAAd,eACOO,EAAcf,OADrB,CAEIE,QAAS,+BACTC,aAAc,uCAMlBY,EAAcP,UAAd,eACOO,EAAcf,OADrB,CAEIE,QAAS,iCACTC,aAAc,0CAWxBb,EAAU7C,IAGhB,OAAO,uBAAK8C,UAAWD,EAAQiE,MAG3B,gBAAC,EAAD,CAAWV,YAAY,yCAAyCE,KAAK,IAAIC,KAAK,mBAE9E,uBAAKzD,UAAWD,EAAQmE,aAEpB,uBAAKlE,UAAWD,EAAQoE,SAGR,IAAXU,EACC,uBAAK7E,UAAWD,EAAQwE,SAAUtE,IAAI,0CAA0CC,IAAI,KACpF,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,iCAAiCC,IAAI,KAG7E,gBAACmF,EAAA,EAAD,CAAQD,QAASP,EAAQS,SAhIf,SAACJ,GAEnBJ,EAAUI,EAAMC,OAAOC,SAEnBP,EAEIE,EAEIvD,EAAcP,UAAd,eACGO,EAAcf,OADjB,CAEAE,QAAS,iCACTC,aAAc,yCAQdY,EAAcP,UAAd,eACGO,EAAcf,OADjB,CAEAE,QAAS,+BACTC,aAAc,uCAQlBmE,EAEIvD,EAAcP,UAAd,eACGO,EAAcf,OADjB,CAEAE,QAAS,kCACTC,aAAc,0CAOdY,EAAcP,UAAd,eACGO,EAAcf,OADjB,CAEAE,QAAS,gCACTC,aAAc,yCAmFgCb,QAAU,CAACqF,QAASrF,EAAQ0E,MAAOc,MAAOxF,EAAQyE,MAAOgB,MAAOzF,EAAQ4E,SAE9G,IAAXE,EACC,uBAAK7E,UAAWD,EAAQwE,SAAUtE,IAAI,2CAA2CC,IAAI,KACrF,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,kCAAkCC,IAAI,OAUtE,IAAX2E,EAEE,uBAAK7E,UAAWD,EAAQsE,SAEf,IAAXU,EAEA,uBAAK/E,UAAWD,EAAQwE,SAAUtE,IAAI,kDAAkDC,IAAI,KAC3F,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,2CAA2CC,IAAI,KAIvF,gBAACmF,EAAA,EAAD,CAAStF,QAAU,CAACqF,QAASrF,EAAQ2E,UAAWa,MAAOxF,EAAQyE,MAAOgB,MAAOzF,EAAQ2E,WAAaU,QAASL,EAAQO,SAAUL,KAEjH,IAAXF,EAEC,uBAAK/E,UAAWD,EAAQwE,SAAUtE,IAAI,+CAA+CC,IAAI,KACzF,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,wCAAwCC,IAAI,MAKjF,uBAAKF,UAAWD,EAAQsE,SAEf,IAAXU,EAEA,uBAAK/E,UAAWD,EAAQwE,SAAUtE,IAAI,iDAAiDC,IAAI,KAC1F,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,0CAA0CC,IAAI,KAItF,gBAACmF,EAAA,EAAD,CAAQtF,QAAU,CAACqF,QAASrF,EAAQ4E,KAAMY,MAAOxF,EAAQyE,MAAOgB,MAAOzF,EAAQ4E,MAAOS,QAASL,EAAQO,SAAUL,KAErG,IAAXF,EAEC,uBAAK/E,UAAWD,EAAQwE,SAAUtE,IAAI,8CAA8CC,IAAI,KACxF,uBAAKF,UAAWD,EAAQwE,SAAUtE,IAAI,uCAAuCC,IAAI,OAWvF,gBAAC,EAAD,CAEAS,QAASa,EAAcf,OAAOE,QAC9BC,aAAcY,EAAcf,OAAOG,aACnCC,WAAYW,EAAcf,OAAOI,WAAW,IAC5CC,eAAgBU,EAAcf,OAAOK,eAAe,IACpDC,cAAeS,EAAcf,OAAOM,cACpCC,YAAaQ,EAAcf,OAAOO,YAAY,S,QC9ThD9D,EAAYC,YAAW,CACzBiE,KAAM,CACJ/D,UAAW,aACXC,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,WAEnBC,YAAa,QACbC,YAAa,MACbC,aAAc,OAEdC,SAAU,SACVC,UAAW,SACXC,cAAe,YACfC,WAAY,MACZC,MAAO,QAEPO,OAAQ,OACRD,MAAO,OAITqH,WAAY,CAEVnH,gBAAiB,yCACjBC,eAAgB,QAChBC,mBAAoB,SACpBJ,MAAO,OACPC,OAAQ,OAERf,gBAAiB,eACjBsF,UAAW,QACX8C,WAAY,SAKdC,WAAY,CAEVrI,gBAAiB,QAEjBe,OAAQ,MAERd,YAAa,QACbC,YAAa,MACbC,aAAc,OACdmI,YAAa,QAGbC,UAAW,wGAKbC,UAAW,CAETxI,gBAAiB,QAEjBe,OAAQ,MAERd,YAAa,QACbC,YAAa,MACbC,aAAc,OACdmI,YAAa,QACbC,UAAW,wGAIbE,UAAW,CAET3H,MAAO,MACPC,OAAQ,QAIV2H,MAAO,CAGLrI,UAAW,SACXE,WAAY,MACZsF,WAAY,+BACZH,UAAW,SACX5E,MAAO,OACPV,SAAU,SACViF,aAAc,OAIhBgB,UAAW,CAETvF,MAAO,MACPC,OAAQ,OACRI,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SAEZ,4BAA6B,CAE3BP,OAAQ,MACRsE,aAAc,SAMlBsD,WAAY,CAEV7H,MAAO,OACPC,OAAQ,OAERI,QAAS,OACTwE,SAAU,WACVtE,eAAgB,SAChBC,WAAW,SACXb,SAAU,WACVO,gBAAiB,wCACjBC,eAAgB,YAChBC,mBAAoB,UAKtB0H,WAAY,CAEV9H,MAAO,OACPC,OAAQ,OACRN,SAAU,WACVmB,IAAK,UAMEiH,EAAY,SAAC,GAAwC,IAAtC7E,EAAqC,EAArCA,KAAMgE,EAA+B,EAA/BA,SAAUc,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IAEhDvG,EAAU7C,IAGd,OAEI,uBAAK8C,UAAWD,EAAQ4D,WACpB,gBAACD,EAAA,EAAD,CAAY1D,UAAWD,EAAQiG,OAC9B1E,GAID,uBAAKtB,UAAWD,EAAQkG,YAIxB,gBAACM,EAAA,EAAD,CAECH,MAAOA,EAAOC,IAAMA,EACpBC,IAAKA,EAAKhB,SAAUA,EACpBvF,QAAS,CAACyG,KAAMzG,EAAQ+F,UAAWN,MAAOzF,EAAQ0F,WAAYF,MAAOxF,EAAQ4F,WAAYvE,KAAMrB,EAAQgG,gBC1J9G7I,EAAYC,YAAW,CAErB6G,KAAM,CAEF5F,MAAO,QACPC,OAAQ,QACRI,QAAS,OACTC,cAAe,GACfuF,SAAU,SACVtF,eAAgB,SAChBC,WAAY,SAEZN,gBAAiB,2CACjBC,eAAgB,QAChBC,mBAAoB,SAEpB,4BAA6B,CAEzBH,OAAQ,SAMhB8F,OAAQ,CAEJ/F,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZwF,WAAY,MAGhBC,OAAQ,CAEJjG,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZ0F,cAAe,MAInBJ,YAAa,CAET9F,MAAO,OACPC,OAAQ,OACRhB,UAAW,gBAOVoJ,EAAiB,WAI1B,IAAMjF,EAAgBhB,aAAiBD,GACjCR,EAAU7C,IAkChB,OAAO,uBAAK8C,UAAWD,EAAQiE,MAE3B,gBAAC,EAAD,CAAWV,YAAY,+DAA+DE,KAAK,iBAAiBC,KAAK,mBAEjH,uBAAKzD,UAAWD,EAAQmE,aAExB,uBAAKlE,UAAWD,EAAQoE,QACvB,gBAAC,EAAD,CAAWiC,MAAO5E,EAAcf,OAAOI,WAAYwF,IAAM,GAAIC,IAAK,GAAIhB,SAvCpD,SAACoB,EAAIC,GAGxBnF,EAAcP,UAAd,eAEOO,EAAcf,OAFrB,CAGII,WAAY8F,MAiCiFrF,KAAK,iBAEtG,uBAAKtB,UAAWD,EAAQsE,QACxB,gBAAC,EAAD,CAAW+B,MAAO5E,EAAcf,OAAOK,eAAiBwE,SA3BpC,SAACoB,EAAIC,GAGzBnF,EAAcP,UAAd,eAEOO,EAAcf,OAFrB,CAGIK,eAAgB6F,MAqB+DrF,KAAK,kBAAkB+E,IAAK,GAAIC,IAAK,OASxH,gBAAC,EAAD,CAEA3F,QAASa,EAAcf,OAAOE,QAC9BC,aAAcY,EAAcf,OAAOG,aACnCC,WAAYW,EAAcf,OAAOI,WAAW,IAC5CC,eAAgBU,EAAcf,OAAOK,eAAe,IACpDC,cAAeS,EAAcf,OAAOM,cACpCC,YAAaQ,EAAcf,OAAOO,YAAY,SC9HhD9D,EAAYC,YAAW,CAErB6G,KAAM,CAEF5F,MAAO,QACPC,OAAQ,QACRI,QAAS,OACTC,cAAe,GACfuF,SAAU,SACVtF,eAAgB,SAChBC,WAAY,SAEZN,gBAAiB,6CACjBC,eAAgB,QAChBC,mBAAoB,SAEpB,4BAA6B,CAEzBH,OAAQ,SAOhBuI,WAAY,CAERtI,gBAAiB,kCACjBC,eAAgB,QAChBC,mBAAoB,SACpBlB,gBAAiB,eACjBc,MAAO,QACPC,OAAQ,QACRwH,UAAW,OACXgB,YAAY,KAEZ,UAAW,CAEPvI,gBAAiB,uCAEjBhB,gBAAiB,eACjBuI,UAAW,SAOnBiB,YAAa,CAETxI,gBAAiB,mCACjBC,eAAgB,QAChBC,mBAAoB,SACpBlB,gBAAiB,eACjBc,MAAO,QACPC,OAAQ,QACRwH,UAAW,OACXH,WAAW,KAEX,UAAW,CAEPpH,gBAAiB,wCAEjBhB,gBAAiB,eACjBuI,UAAW,SAOnB3B,YAAa,CAET9F,MAAO,OACPC,OAAQ,OACRhB,UAAW,cAIf8G,OAAQ,CAEJ/F,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZwF,WAAY,MAGhBC,OAAQ,CAEJjG,MAAO,OACPC,OAAQ,MACRhB,UAAW,aAEXoB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZ0F,cAAe,QASdyC,EAAiB,WAE1B,IAAMvF,EAAgBhB,aAAiBD,GACjCR,EAAU7C,IA0ChB,OAAO,uBAAK8C,UAAWD,EAAQiE,MAE3B,gBAAC,EAAD,CAAWV,YAAY,iDAAiDE,KAAK,kBAAkBC,KAAK,WAEpG,uBAAKzD,UAAWD,EAAQmE,aAKxB,uBAAKlE,UAAWD,EAAQoE,QAExB,gBAAChE,EAAA,EAAD,CAAQ6G,eAAe,EAAMjH,QAAS,CAACqB,KAAMrB,EAAQ6G,YAAahF,QA1BnD,WAGfJ,EAAcP,UAAd,eAEOO,EAAcf,OAFrB,CAGIM,cAAe,gBAwBf,gBAACZ,EAAA,EAAD,CAAQ6G,eAAe,EAAMjH,QAAS,CAACqB,KAAMrB,EAAQ+G,aAAclF,QA5CvD,WAGhBJ,EAAcP,UAAd,eAEOO,EAAcf,OAFrB,CAGIM,cAAe,gBA4CnB,uBAAKf,UAAWD,EAAQsE,QAExB,gBAAC,EAAD,CAAY+B,MAAO5E,EAAcf,OAAOO,YAAaqF,IAAK,GAAIC,IAAK,IAAKhB,SA/DlD,SAACoB,EAAGC,GAE1BnF,EAAcP,UAAd,eACOO,EAAcf,OADrB,CAEIO,YAAa2F,MA2DoFrF,KAAK,wBAO1G,gBAAC,EAAD,CAEAX,QAASa,EAAcf,OAAOE,QAC9BC,aAAcY,EAAcf,OAAOG,aACnCC,WAAYW,EAAcf,OAAOI,WAAW,IAC5CC,eAAgBU,EAAcf,OAAOK,eAAe,IACpDC,cAAeS,EAAcf,OAAOM,cACpCC,YAAaQ,EAAcf,OAAOO,YAAY,SCjMhD9D,EAAYC,YAAW,CAEzB6G,KAAM,CAEF5F,MAAO,QACPC,OAAQ,QACRI,QAAS,OACTC,cAAe,GACfuF,SAAU,SACVtF,eAAgB,SAChBC,WAAY,SAEZN,gBAAiB,uCACjBC,eAAgB,QAChBC,mBAAoB,SAGpB,4BAA6B,CAEzBH,OAAQ,SAMhB4I,aAAc,CAEV7I,MAAO,MACPC,OAAQ,MAERI,QAAS,OACTC,cAAe,MACfE,WAAY,aACZsI,aAAc,aACdvI,eAAgB,aAChBsF,SAAU,OACVG,WAAY,KACZE,cAAe,KACf6C,SAAU,OAQV,uBAAwB,CACpB/I,MAAO,OACPgJ,aAAc,QAIlB,6BAA8B,CAC1BC,WAAY,WAIhB,6BAA8B,CAC1BA,WAAY,UACZ5J,aAAc,OAIlB,mCAAoC,CAChC4J,WAAY,QAKhB,4BAA6B,CAEzBhJ,OAAQ,SAYhBiJ,cAAe,CAEXlJ,MAAO,MACPC,OAAQ,OACRuE,UAAW,MACXD,aAAc,OAIlB4E,KAAM,CAEFxJ,SAAU,WACVmB,IAAK,OACLjB,KAAM,OAENK,gBAAiB,oCACjBC,eAAgB,UAChBiJ,iBAAkB,YAClBhJ,mBAAoB,SACpBlB,gBAAiB,eACjBc,MAAO,OACPC,OAAQ,OACRwH,UAAW,OAEX,UAAW,CAEPvH,gBAAiB,yCACjBhB,gBAAiB,eACjBuI,UAAW,SAKnB4B,OAAQ,CAEJ1J,SAAU,WACVmB,IAAK,OACLwI,MAAO,OAEPpJ,gBAAiB,oCACjBC,eAAgB,UAChBiJ,iBAAkB,YAClBhJ,mBAAoB,SACpBlB,gBAAiB,eACjBc,MAAO,OACPC,OAAQ,OACRwH,UAAW,OAEX,UAAW,CAEPvH,gBAAiB,yCACjBhB,gBAAiB,eACjBuI,UAAW,SAOnB8B,YAAa,CAET5J,SAAU,WACVK,MAAO,OACPC,OAAQ,UAKHuJ,EAAS,WAElB,IAAMC,EAAUC,cACV/H,EAAU7C,IACVsE,EAAgBhB,aAAiBD,GAJf,EAMQC,WAAe,MANvB,mBAMjBuH,EANiB,KAMPC,EANO,KA2ExB,OAAS,uBAAKhI,UAAaD,EAAQiE,MAI/B,gBAAC,EAAD,CAAWV,YAAc,oCAAoCE,KAAO,kBAAkBC,KAAO,KAI7F,uBAAKzD,UAAaD,EAAQkH,cAIzBzF,EAAcN,WAAW+G,KAAI,SAACrE,GAEvB,OAAO,gBAACzD,EAAA,EAAD,CAAQ+H,IAAOtE,EAAOlD,GAAIkB,QAAW,kBAjFpC,SAACgC,GAEjBoE,EAAYpE,GA+E8CuE,CAAYvE,IAAS5D,UAAaD,EAAQuH,eAG5F,gBAAE,EAAF,CAAS3G,QAAWiD,EAAOjD,QAASC,aAAgBgD,EAAOhD,aAAcC,WAAc+C,EAAO/C,WAAa,IAC3GC,eAAkB8C,EAAO9C,eAAiB,IAC1CC,cAAiB6C,EAAO7C,cACxBC,YAAe4C,EAAO5C,YAAc,WAe1C+G,GAAY,uBAAK/H,UAAaD,EAAQ4H,aAGhC,gBAAC,EAAD,CAEJhH,QAAWoH,EAASpH,QACpBC,aAAgBmH,EAASnH,aACzBC,WAAckH,EAASlH,WAAa,IACpCC,eAAkBiH,EAASjH,eAAiB,IAC5CC,cAAiBgH,EAAShH,cAC1BC,YAAe+G,EAAS/G,YAAc,MAItC,gBAACb,EAAA,EAAD,CAAQH,UAAaD,EAAQwH,KAAMP,eAAiB,EAAMpF,QAAW,kBAAiBmG,EAASrH,GAjFnGc,EAAcP,UAAU8G,QAGxBF,EAAQO,KAAK,qBA+ET,gBAACjI,EAAA,EAAD,CAAQH,UAAaD,EAAQ0H,OAAQT,eAAiB,EAAMpF,QAAW,kBA3E1D,SAACyG,GAGlB,IAAMxG,EAASL,EAAcN,WAAWY,WAAU,SAACC,GAE/C,OAAOA,EAAKrB,KAAO2H,KAKvB7G,EAAcL,cAAd,sBAEOK,EAAcN,WAAWe,MAAM,EAAGJ,IAFzC,YAGOL,EAAcN,WAAWe,MAAMJ,EAAS,MAI/CmG,EAAY,MA0DqEM,CAAaP,EAASrH,WCtDhG6H,MA5Nf,WAAgB,IAAD,EAEuB/H,IAAMgI,SAAS,IAFtC,mBAENtH,EAFM,KAEMC,EAFN,KAqJbX,IAAMiI,WAAU,WAEd,IAAMC,EAAaC,aAAaC,QAAQ,QAErB,OAAfF,GAEFvH,EAAc0H,KAAKC,MAAMJ,MAM3B,IAGFlI,IAAMiI,WAAU,WAEdE,aAAaI,QAAQ,OAAQF,KAAKG,UAAUxH,EAAcN,aAE1D+H,QAAQC,IAAI,oBAEZ,CAAChI,IA1KU,MA6KeV,IAAMgI,SAAS,CAEzC9H,GAAI,GACJC,QAAS,gCACTC,aAAc,qCACdC,WAAW,GACXC,eAAe,GACfC,cAAc,SACdC,YAAY,MArLD,mBAyLPQ,EAAgB,CAEpBf,OA3LW,KA4LXQ,UA5LW,KA6LXC,WAAYA,EACZC,cAAeA,GAKjB,OACE,yBAAKnB,UAAU,OAEb,kBAACO,EAAc4I,SAAf,CAAwB/C,MAAO5E,GAE7B,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAO4H,KAAK,IAAIC,OAAK,EAACjJ,UAAWN,IACjC,kBAAC,IAAD,CAAOsJ,KAAK,iBAAiBC,OAAK,EAACjJ,UAAWwE,IAC9C,kBAAC,IAAD,CAAOwE,KAAK,kBAAkBC,OAAK,EAACjJ,UAAWqG,IAC/C,kBAAC,IAAD,CAAO2C,KAAK,kBAAkBC,OAAK,EAACjJ,UAAW2G,IAC/C,kBAAC,IAAD,CAAOqC,KAAK,UAAUC,OAAK,EAACjJ,UAAWwH,QCjNjD0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SZwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjB,QAAQiB,MAAMA,EAAMC,c","file":"static/js/main.afd7adc9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    homeButton: {\r\n        boxSizing: \"border-box\",\r\n        backgroundColor: \"#B43F90\",\r\n        '&:hover': {\r\n          backgroundColor: \"#7D2D69\",\r\n       },\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"8px\",\r\n        borderRadius: \"15px\",\r\n\r\n        fontSize: \"1.2rem\",\r\n        fontStyle: \"normal\",\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"300\",\r\n        color: 'white',\r\n\r\n        position: \"absolute\",\r\n        bottom: \"9%\",\r\n        left: \"13%\",\r\n        transform: \"rotate(-4deg)\",\r\n\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            bottom: \"1%\",\r\n            left: \"9%\",\r\n            transform: \"rotate(0deg)\",\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    bodyHome: {\r\n\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundImage: 'url(\"/terra-form/img/FondoHome.jpg\")',\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n\r\n    },\r\n\r\n    panelContainer: {\r\n\r\n        width: \"50%\",\r\n        position: \"relative\",\r\n\r\n            \"& img\": {\r\n\r\n                objectFit: \"contain\",\r\n                maxWidth: \"100%\"\r\n\r\n        },\r\n\r\n        \"@media (max-width: 1250px)\": {\r\n\r\n            width: \"70%\",\r\n\r\n        },\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            width: \"95%\",\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    planetasHome: {\r\n        position: \"absolute\"\r\n\r\n    },\r\n\r\n    tierraHome: {\r\n        top: \"25%\",\r\n        left: \"40%\",\r\n        width: \"35%\"\r\n    },\r\n\r\n    nubesTierraHome: {\r\n        width: \"35%\",\r\n        top: \"25%\",\r\n        left: \"40%\",\r\n        animation:\"$spin 230s linear infinite\",\r\n        animationDirection: \"reverse\"\r\n    },\r\n\r\n\r\n\r\n    AmarilloHome: {\r\n\r\n        top: \"36%\",\r\n        left: \"78%\",\r\n        width: \"35%\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            top: \"56%\",\r\n            left: \"49%\",\r\n            width: \"48%\"\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    nubesAmarilloHome: {\r\n        top: \"36%\",\r\n        left: \"76%\",\r\n        width: \"35%\",\r\n        animation: \"$spin 180s linear infinite\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            top: \"56%\",\r\n            left: \"49%\",\r\n            width: \"48%\"\r\n\r\n        }\r\n    },\r\n\r\n    marteHome: {\r\n        top: \"23%\",\r\n        left: \"73%;\",\r\n        width: \"20%;\"\r\n\r\n    },\r\n\r\n    nubesMarteHome: {\r\n        top: \"23%\",\r\n        left: \"73%\",\r\n        width: \"20%\",\r\n        animation: \"$spin 80s linear infinite\",\r\n        animationDelay: \"-55s\"\r\n    },\r\n\r\n    nose: {\r\n        width: \"12%\",\r\n        top: \"32%\",\r\n        left: \"31%\",\r\n        animation: \"$spin 170s linear infinite\"\r\n\r\n    },\r\n\r\n\r\n    bannerDesk:{\r\n\r\n        display: \"block\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            display: \"none\",\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    bannerMobile: {\r\n\r\n        display: \"none\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            display: \"block\",\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    \"@keyframes spin\": {\r\n\r\n        \"100%\": { transform: \"rotate(360deg)\" }\r\n\r\n\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(<div className={classes.bodyHome}>\r\n\r\n        <div className={classes.panelContainer}>\r\n\r\n            <img src=\"/terra-form/img/banner.png\" className={classes.bannerDesk} alt=\"\"/>\r\n            <img src=\"/terra-form/img/BannerMobile.png\" className={classes.bannerMobile} alt=\"\"/>\r\n\r\n            <img src=\"/terra-form/img/noSe.png\" className={classes.planetasHome+ ' ' + classes.nose} alt=\"\"/>\r\n\r\n            <img src=\"/terra-form/img/tierraIntro.png\" className={classes.planetasHome+ ' ' + classes.tierraHome} alt=\"\"/>\r\n            <img src=\"/terra-form/img/nubesTierraIntro.png\" className={classes.planetasHome+ ' ' + classes.nubesTierraHome} alt=\"\"/>\r\n\r\n            <img src=\"/terra-form/img/marte.png\" className={classes.planetasHome+ ' ' + classes.marteHome} alt=\"\"/>\r\n            <img src=\"/terra-form/img/lunasMarte.png\" className={classes.planetasHome+ ' ' + classes.nubesMarteHome} alt=\"\"/>\r\n\r\n            <img src=\"/terra-form/img/planetaAmarilloIntro.png\" className={classes.planetasHome+ ' ' + classes.AmarilloHome} alt=\"\"/>\r\n            <img src=\"/terra-form/img/nubesPlanetaAmarillo.png\" className={classes.planetasHome+ ' ' + classes.nubesAmarilloHome} alt=\"\"/>\r\n\r\n            <Button className={classes.homeButton} component={Link} to=\"/elementPicker\">\r\n                START\r\n            </Button>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import * as React from \"react\";\r\n\r\nexport const PlanetContext = React.createContext({\r\n\r\n    config: {\r\n\r\n        id:\"\",\r\n        element: \"\",\r\n        elementAtmos: \"\",\r\n        sizePlanet:\"\",\r\n        sizeAtmosphere:\"\",\r\n        senseRotation:\"\",\r\n        velRotation:\"\",\r\n\r\n    },\r\n    setConfig: () => null,\r\n    planetList: [],\r\n    setPlanetList: ()=> null,\r\n\r\n\r\n})","import * as React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PlanetContext } from '../../utils/PlanetContext';\r\nimport {v4} from \"uuid\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      boxSizing: \"border-box\",\r\n      backgroundColor: \"#B43F90\",\r\n      '&:hover': {\r\n        backgroundColor: \"#7D2D69\",\r\n     },\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"8px\",\r\n      borderRadius: \"15px\",\r\n\r\n      fontSize: \"1.2rem\",\r\n      fontStyle: \"normal\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"300\",\r\n      color: 'white',\r\n\r\n      height: \"100%\",\r\n      width: \"45%\",\r\n\r\n    },\r\n  });\r\n\r\nexport const NavButton = ({ text, link}) => {\r\n\r\n    const classes = useStyles();\r\n    const globalContext = React.useContext(PlanetContext);\r\n\r\n    const [edition, setEdition] = React.useState(0);\r\n\r\n/*\r\n\r\n        Hacer esto para borrar el elemento antes de editarlo, va a perder la posición en la lista\r\n\r\n\r\n    React.useEffect(()=>{\r\n\r\n      globalContext.setConfig({\r\n        ...globalContext.config,\r\n        id: v4(),\r\n      });\r\n\r\n    },[]);\r\n\r\n    const handleFinish = () => {\r\n\r\n      if (text===\"End\"){\r\n\r\n        globalContext.setPlanetList([\r\n          ...globalContext.planetList,\r\n          {\r\n\r\n            id: globalContext.config.id,\r\n            element: globalContext.config.element,\r\n            elementAtmos: globalContext.config.elementAtmos,\r\n            sizePlanet: globalContext.config.sizePlanet,\r\n            sizeAtmosphere: globalContext.config.sizeAtmosphere,\r\n            senseRotation: globalContext.config.senseRotation,\r\n            velRotation: globalContext.config.velRotation,\r\n\r\n          }\r\n        ]);\r\n\r\n        globalContext.setConfig({\r\n\r\n       //   id: \"\",\r\n          element: \"/terra-form/terra-form/img/waterCont.png\",\r\n          elementAtmos: \"img/waterContAtmos.png\",\r\n          sizePlanet:65,\r\n          sizeAtmosphere:65,\r\n          senseRotation:\"normal\",\r\n          velRotation:165,\r\n\r\n        });\r\n\r\n\r\n      }\r\n\r\n\r\n    }\r\n*/\r\n\r\n\r\n\r\nReact.useEffect(()=>{\r\n\r\n  if (text===\"End\"){  //si el texto del botón de next step dice end\r\n\r\n    if(globalContext.config.id ===\"\"){ //y el id del planeta en el contexto actual está vacía\r\n\r\n      globalContext.setConfig({ //seteale un id usando la librería v4\r\n        ...globalContext.config,\r\n        id: v4(),\r\n      });\r\n\r\n      setEdition(1); // si vamos a galería y venimos de un planeta nuevo setea el estado a 1\r\n\r\n\r\n    } else {\r\n\r\n    setEdition(2); // si vamos a galería y el planeta ya tiene id, setea el estado a 2\r\n\r\n    }\r\n  }\r\n\r\n\r\n},[]);\r\n\r\n\r\nconst handleFinish = () => {\r\n\r\n  if (text===\"End\"){ //si doy click a next y texto dice End\r\n\r\n    if(edition===1){ //y venimos de un planeta nuevo\r\n\r\n      globalContext.setPlanetList([ // agrego un objeto a la lista de planetas con los datos del contexto actual\r\n        ...globalContext.planetList,\r\n        {\r\n\r\n          id: globalContext.config.id,\r\n          element: globalContext.config.element,\r\n          elementAtmos: globalContext.config.elementAtmos,\r\n          sizePlanet: globalContext.config.sizePlanet,\r\n          sizeAtmosphere: globalContext.config.sizeAtmosphere,\r\n          senseRotation: globalContext.config.senseRotation,\r\n          velRotation: globalContext.config.velRotation,\r\n\r\n        }\r\n      ]);\r\n\r\n      globalContext.setConfig({  // y seteo los valores del contexto al valor por default\r\n\r\n        id: \"\",\r\n        element: \"/terra-form/img/waterCont.png\",\r\n        elementAtmos: \"img/waterContAtmos.png\",\r\n        sizePlanet:65,\r\n        sizeAtmosphere:65,\r\n        senseRotation:\"normal\",\r\n        velRotation:165,\r\n\r\n      });\r\n\r\n\r\n    }\r\n\r\n    if (edition===2) { //pero si venimos de un planeta viejo...\r\n\r\n      const chosen = globalContext.planetList.findIndex((elem) => { //aquí recorro el arreglo de planetas buscando si algún valor id de un objeto contenido en el arreglo\r\n        return elem.id === globalContext.config.id;// tiene el mismo valor del id del contexto actual\r\n\r\n    });\r\n\r\n    const editado = globalContext.planetList.slice();\r\n    editado.splice(chosen,1,globalContext.config);\r\n    globalContext.setPlanetList(editado);\r\n    globalContext.setConfig({\r\n      ...globalContext.config,\r\n      id:\"\"\r\n    })\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n    return(\r\n        <Button onClick={handleFinish} className={classes.root} component={Link} to={link}>\r\n         {text}\r\n        </Button>\r\n    );\r\n\r\n}\r\n\r\nNavButton.propTypes = {\r\n    text: PropTypes.string,\r\n    link: PropTypes.string,\r\n  }","import * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { NavButton } from \"../../componentes/NavButton/NavButton\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    plantilla: {\r\n      boxSizing: \"border-box\",\r\n      margin: 0,\r\n      border: 0,\r\n      borderRadius: 3,\r\n      padding: '0px',\r\n      position: \"relative\",\r\n      width: \"55%\",\r\n      height: \"60%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n\r\n\r\n      \"@media (max-width: 1580px)\": {\r\n\r\n        width: \"80%\",\r\n\r\n    },\r\n\r\n    \"@media (max-width: 1100px)\": {\r\n\r\n        width: \"95%\",\r\n\r\n    },\r\n\r\n    \"@media (max-width: 850px)\": {\r\n\r\n        height: \"auto\",\r\n\r\n    }\r\n\r\n\r\n    },\r\n\r\n    content: {\r\n\r\n        width: \"100%\",\r\n        height: \"76%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n\r\n        justifyContent: \"space-between\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            flexDirection: \"column\",\r\n            height: \"auto\",\r\n\r\n        }\r\n\r\n    },\r\n\r\n    opciones: {\r\n\r\n        width: \"43%\",\r\n        height: \"100%\",\r\n\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        order: 1,\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            width: \"100%\",\r\n            order: 2\r\n\r\n        }\r\n\r\n    },\r\n\r\n    visualizar: {\r\n\r\n        width: \"53.08%\",\r\n        height: \"100%\",\r\n        boxSizing: \"border-box\",\r\n        backgroundColor: \"#B180AE\",\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"8px\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n\r\n        backgroundImage: \"url('/terra-form/img/visualizarFondo.png')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        order: 2,\r\n        marginBottom: \"0px\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            width: \"100%\",\r\n            order: 1,\r\n            marginBottom: \"30px\",\r\n            marginTop: \"30px\",\r\n            height: \"405px\"\r\n\r\n        }\r\n\r\n    },\r\n\r\n    editar: {\r\n\r\n        width: \"100%\",\r\n        height: \"80%\",\r\n        position: \"relative\",\r\n\r\n        boxSizing: \"border-box\",\r\n        backgroundColor: \"#323455\",\r\n\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"8px\",\r\n        borderRadius: \"15px\",\r\n\r\n        fontSize: \"1.2rem\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"400\",\r\n        color: 'white',\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            marginBottom: \"30px\"\r\n\r\n        }\r\n\r\n    },\r\n\r\n    navegar: {\r\n\r\n        width: \"100%\",\r\n        height: \"12%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            marginBottom: \"30px\"\r\n\r\n        }\r\n\r\n    },\r\n\r\n    titulo: {\r\n\r\n        width: \"100%\",\r\n        height: \"15%\",\r\n\r\n        boxSizing: \"border-box\",\r\n        backgroundColor: \"#B180AE\",\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"8px\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n\r\n        textAlign:\"center\",\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        justifyContent: \"center\",\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            height: \"auto\",\r\n            marginTop: \"30PX\"\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    mainTitle: {\r\n\r\n        fontSize: \"1.5rem\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"300\",\r\n        color: 'white',\r\n        textTransform: \"uppercase\",\r\n        fontFamily: \"'Source Code Pro', monospace\"\r\n\r\n    },\r\n\r\n    subNavegar: {\r\n\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n\r\n    },\r\n\r\n\r\n});\r\n\r\nexport const Plantilla = ({instruction, children, back, next}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return(<div className={classes.plantilla}>\r\n\r\n\r\n    <div className={classes.titulo}>\r\n    <Typography className={classes.mainTitle}>{instruction}</Typography>\r\n    </div>\r\n\r\n    <div className={classes.content}>\r\n\r\n        <div className={classes.opciones}>\r\n\r\n        <div className={classes.editar}>\r\n            {children[0]}\r\n        </div>\r\n        <div className={classes.navegar}>\r\n\r\n            {next===\"/galery\"\r\n\r\n            ? <div className={classes.subNavegar}>\r\n                <NavButton text=\"Back\" link={back} position=\"relative\"/>\r\n\r\n                <NavButton text=\"End\" link={next} position=\"relative\"/>\r\n            </div>\r\n\r\n\r\n            : next===\"/\"\r\n            ?<div  className={classes.subNavegar}>\r\n\r\n           {/* <NavButton text=\"Edit List\" link={back} position=\"relative\"/> */}\r\n\r\n            <NavButton text=\"Start New\" link={next} position=\"relative\"/>\r\n\r\n            </div>\r\n\r\n            :<div  className={classes.subNavegar}>\r\n\r\n                <NavButton text=\"Back\" link={back} position=\"relative\"/>\r\n\r\n                <NavButton text=\"Next\" link={next} position=\"relative\"/>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n\r\n        </div>\r\n\r\n        </div>\r\n\r\n        <div className={classes.visualizar}>\r\n        {children[1]}\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nPlantilla.propTypes = {\r\n    tittle: PropTypes.string,\r\n    back: PropTypes.string,\r\n    next: PropTypes.string,\r\n\r\n}","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    container: {\r\n\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n\r\n    },\r\n\r\n    planet: {\r\n\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n\r\n        width: ({ sizePlanet }) => sizePlanet,\r\n        height: \"auto\"\r\n\r\n    },\r\n\r\n    atmosphere: {\r\n\r\n        position: \"relative\",\r\n        width: ({ sizeAtmosphere }) => sizeAtmosphere,\r\n        height: \"auto\",\r\n\r\n        animation:\"$spin linear infinite\",\r\n        animationDuration: ({ velRotation }) => velRotation,\r\n        animationDirection: ({ senseRotation }) => senseRotation,\r\n\r\n    },\r\n\r\n    \"@keyframes spin\": {\r\n\r\n        \"100%\": { transform: \"rotate(360deg)\" }\r\n\r\n\r\n    }\r\n\r\n  });\r\n\r\nexport const Planet = ({element,elementAtmos, sizePlanet, sizeAtmosphere, senseRotation, velRotation, id}) => {\r\n\r\n    const classes = useStyles({sizePlanet,sizeAtmosphere,senseRotation,velRotation});\r\n\r\n    return(<div className={classes.container}>\r\n\r\n\r\n        <img className={classes.planet} src={element} alt=\"\"/>\r\n        <img className={classes.atmosphere} src={elementAtmos} alt=\"\"/>\r\n\r\n\r\n    </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nPlanet.propTypes = {\r\n    element: PropTypes.string,\r\n    elementAtmos: PropTypes.string,\r\n    sizePlanet: PropTypes.string,\r\n    sizeAtmosphere: PropTypes.string,\r\n    senseRotation: PropTypes.string,\r\n    velRotation: PropTypes.string,\r\n    id: PropTypes.number,\r\n\r\n  }\r\n\r\n","import * as React from \"react\";\r\nimport { Plantilla } from \"../../componentes/Plantilla/Plantilla\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Switch } from \"@material-ui/core\";\r\nimport { Planet } from \"../../componentes/Planet/Planet\";\r\nimport { PlanetContext } from '../../utils/PlanetContext';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n        body: {\r\n\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"\",\r\n            flexWrap: \"nowrap\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n            backgroundImage: \"url('/terra-form/img/FondoElement.jpg')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n\r\n\r\n            \"@media (max-width: 850px)\": {\r\n\r\n                height: \"auto\"\r\n\r\n            }\r\n\r\n        },\r\n\r\n        elementPick: {\r\n\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            boxSizing: \"border-box\"\r\n\r\n        },\r\n\r\n        subOne: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingTop: \"5%\"\r\n\r\n        },\r\n        subTwo: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingBottom: \"5%\"\r\n\r\n        },\r\n\r\n        subImage: {\r\n\r\n            height: \"75%\",\r\n            width: \"auto\",\r\n\r\n            \"@media (max-width: 850px)\": {\r\n\r\n                height: \"auto\",\r\n                width: \"22%\",\r\n\r\n            }\r\n\r\n        },\r\n\r\n        nueva: {\r\n            backgroundColor: \"#000\"\r\n\r\n        },\r\n\r\n        water: {\r\n\r\n            \"& .MuiSwitch-thumb\": {\r\n\r\n                color: \"#59C2EE\",\r\n\r\n            },\r\n\r\n            '& + .MuiSwitch-track': {\r\n                backgroundColor: '#000 !important'\r\n            }\r\n\r\n        },\r\n\r\n        justWater: {\r\n\r\n            color: \"#59C2EE\",\r\n            '& + .MuiSwitch-track': {\r\n                backgroundColor: '#000 !important'\r\n            }\r\n\r\n        },\r\n\r\n\r\n        fire: {\r\n            color: \"#E68465\",\r\n            '& + .MuiSwitch-track': {\r\n                backgroundColor: '#000 !important'\r\n            },\r\n        }\r\n\r\n    });\r\n\r\nexport const ElementPicker = () => {\r\n\r\n\r\n    const globalContext = React.useContext(PlanetContext);\r\n\r\n    const [checkA, setCheckA] = React.useState(true);\r\n    const [checkB, setCheckB] = React.useState(false);\r\n\r\n\r\n    const handleChangeA = (event) => {\r\n\r\n        setCheckA(event.target.checked);\r\n\r\n        if (checkA){\r\n\r\n            if (checkB){\r\n\r\n                    globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/fireIsland.png\",\r\n                    elementAtmos: \"/terra-form/img/fireIslandAtmos.png\"\r\n\r\n                    });\r\n\r\n\r\n\r\n            } else {\r\n\r\n                    globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/fireCont.png\",\r\n                    elementAtmos: \"/terra-form/img/fireContAtmos.png\"\r\n\r\n                    });\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if (checkB){\r\n\r\n                    globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/waterIsland.png\",\r\n                    elementAtmos: \"/terra-form/img/waterIslandAtmos.png\"\r\n\r\n                    });\r\n\r\n\r\n            } else {\r\n\r\n                    globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/waterCont.png\",\r\n                    elementAtmos: \"/terra-form/img/waterContAtmos.png\"\r\n\r\n                    });\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleChangeB = (event) => {\r\n\r\n        setCheckB(event.target.checked);\r\n\r\n        if (checkA){\r\n\r\n            if (checkB){\r\n\r\n                globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/waterCont.png\",\r\n                    elementAtmos: \"/terra-form/img/waterContAtmos.png\"\r\n\r\n                    });\r\n\r\n            } else {\r\n\r\n                globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/waterIsland.png\",\r\n                    elementAtmos: \"/terra-form/img/waterIslandAtmos.png\"\r\n\r\n                    });\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if (checkB){\r\n\r\n                globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/fireCont.png\",\r\n                    elementAtmos: \"/terra-form/img/fireContAtmos.png\"\r\n\r\n                    });\r\n\r\n            } else {\r\n\r\n                globalContext.setConfig({\r\n                    ...globalContext.config,\r\n                    element: \"/terra-form/img/fireIsland.png\",\r\n                    elementAtmos: \"/terra-form/img/fireIslandAtmos.png\"\r\n\r\n                    });\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return(<div className={classes.body}>\r\n\r\n\r\n        <Plantilla instruction=\"Choose the main element on your planet\" back=\"/\" next=\"/diameterPicker\">\r\n\r\n        <div className={classes.elementPick}>\r\n\r\n            <div className={classes.subOne}>\r\n\r\n\r\n                {checkA === true\r\n                ? <img className={classes.subImage} src=\"/terra-form/img/selectFireUnChecked.png\" alt=\"\"/>\r\n                : <img className={classes.subImage} src=\"/terra-form/img/selectFire.png\" alt=\"\"/>\r\n                }\r\n\r\n                <Switch checked={checkA} onChange={handleChangeA} classes={ {checked: classes.water, track: classes.nueva, thumb: classes.fire}}/>\r\n\r\n                {checkA === false\r\n                ? <img className={classes.subImage} src=\"/terra-form/img/selectWaterUnChecked.png\" alt=\"\"/>\r\n                : <img className={classes.subImage} src=\"/terra-form/img/selectWater.png\" alt=\"\"/>\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            {checkA === true\r\n\r\n            ?  <div className={classes.subTwo}>\r\n\r\n            {checkB === true\r\n\r\n            ?<img className={classes.subImage} src=\"/terra-form/img/SelectContinentWaterChecked.png\" alt=\"\"/>\r\n            : <img className={classes.subImage} src=\"/terra-form/img/SelectContinentWater.png\" alt=\"\"/>\r\n\r\n            }\r\n\r\n            <Switch  classes={ {checked: classes.justWater, track: classes.nueva, thumb: classes.justWater} } checked={checkB} onChange={handleChangeB}/>\r\n\r\n            {checkB === false\r\n\r\n            ? <img className={classes.subImage} src=\"/terra-form/img/SelectIslandWaterChecked.png\" alt=\"\"/>\r\n            : <img className={classes.subImage} src=\"/terra-form/img/SelectIslandWater.png\" alt=\"\"/>\r\n\r\n            }\r\n\r\n        </div>\r\n            :  <div className={classes.subTwo}>\r\n\r\n            {checkB === true\r\n\r\n            ?<img className={classes.subImage} src=\"/terra-form/img/SelectContinentFireChecked.png\" alt=\"\"/>\r\n            : <img className={classes.subImage} src=\"/terra-form/img/SelectContinentFire.png\" alt=\"\"/>\r\n\r\n            }\r\n\r\n            <Switch classes={ {checked: classes.fire, track: classes.nueva, thumb: classes.fire}} checked={checkB} onChange={handleChangeB}/>\r\n\r\n            {checkB === false\r\n\r\n            ? <img className={classes.subImage} src=\"/terra-form/img/SelectIslandFireChecked.png\" alt=\"\"/>\r\n            : <img className={classes.subImage} src=\"/terra-form/img/SelectIslandFire.png\" alt=\"\"/>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n        <Planet\r\n\r\n        element={globalContext.config.element}\r\n        elementAtmos={globalContext.config.elementAtmos}\r\n        sizePlanet={globalContext.config.sizePlanet+\"%\"}\r\n        sizeAtmosphere={globalContext.config.sizeAtmosphere+\"%\"}\r\n        senseRotation={globalContext.config.senseRotation}\r\n        velRotation={globalContext.config.velRotation+\"s\"}\r\n\r\n        />\r\n\r\n\r\n        </Plantilla>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import * as React from \"react\";\r\nimport {Slider, Typography} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      boxSizing: \"border-box\",\r\n      backgroundColor: \"#B43F90\",\r\n      '&:hover': {\r\n        backgroundColor: \"#7D2D69\",\r\n     },\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"8px\",\r\n      borderRadius: \"15px\",\r\n\r\n      fontSize: \"1.2rem\",\r\n      fontStyle: \"normal\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"300\",\r\n      color: 'white',\r\n\r\n      height: \"100%\",\r\n      width: \"45%\",\r\n\r\n    },\r\n\r\n    nuevoThumb: {\r\n\r\n      backgroundImage: \"url('/terra-form/img/sliderThumb.png')\",\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n\r\n      backgroundColor: \"rgb(0,0,0,0)\",\r\n      marginTop: \"-13px\",\r\n      marginLeft: \"-13px\",\r\n\r\n\r\n    },\r\n\r\n    nuevoTrack: {\r\n\r\n      backgroundColor: \"white\",\r\n\r\n      height: \"2px\",\r\n\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"1px\",\r\n      borderRadius: \"15px\",\r\n      borderColor: \"white\",\r\n\r\n\r\n      boxShadow: \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"\r\n\r\n\r\n    },\r\n\r\n    nuevoRail: {\r\n\r\n      backgroundColor: \"white\",\r\n\r\n      height: \"1px\",\r\n\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"1px\",\r\n      borderRadius: \"15px\",\r\n      borderColor: \"white\",\r\n      boxShadow: \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"\r\n\r\n    },\r\n\r\n    nuevoRoot: {\r\n\r\n      width: \"80%\",\r\n      height: \"auto\",\r\n\r\n    },\r\n\r\n    title: {\r\n\r\n\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"400\",\r\n      fontFamily: \"'Source Code Pro', monospace\",\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n      fontSize: \"1.5rem\",\r\n      marginBottom: \"5px\"\r\n\r\n    },\r\n\r\n    container: {\r\n\r\n      width: \"80%\",\r\n      height: \"auto\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n\r\n      \"@media (max-width: 850px)\": {\r\n\r\n        height: \"70%\",\r\n        marginBottom: \"30px\"\r\n\r\n    }\r\n\r\n    },\r\n\r\n    sliderCont: {\r\n\r\n      width: \"100%\",\r\n      height: \"70px\",\r\n\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      justifyContent: \"center\",\r\n      alignItems:\"center\",\r\n      position: \"relative\",\r\n      backgroundImage: \"url('/terra-form/img/sliderCont.png')\",\r\n      backgroundSize: \"100% 100%\",\r\n      backgroundPosition: \"center\",\r\n\r\n\r\n    },\r\n\r\n    trackImage: {\r\n\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      position: \"absolute\",\r\n      top: \"-5px\"\r\n\r\n    }\r\n\r\n  });\r\n\r\nexport const AppSlider = ({ text, onChange, value, min, max}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n    return(\r\n\r\n        <div className={classes.container}>\r\n            <Typography className={classes.title}>\r\n            {text}\r\n\r\n            </Typography>\r\n\r\n            <div className={classes.sliderCont}>\r\n\r\n          {/* <img className={classes.trackImage} src=\"/img/sliderCont.png\" alt=\"\"/> */}\r\n\r\n            <Slider\r\n\r\n             value={value} min ={min}\r\n             max={max} onChange={onChange}\r\n             classes={{rail: classes.nuevoRail, thumb: classes.nuevoThumb, track: classes.nuevoTrack, root: classes.nuevoRoot}}/>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nAppSlider.propTypes = {\r\n    text: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.number,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number\r\n  }","import * as React from \"react\";\r\nimport { Plantilla } from \"../../componentes/Plantilla/Plantilla\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Planet } from \"../../componentes/Planet/Planet\";\r\nimport { PlanetContext } from '../../utils/PlanetContext';\r\nimport { AppSlider } from \"../../componentes/AppSlider/AppSlider\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n        body: {\r\n\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"\",\r\n            flexWrap: \"nowrap\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n            backgroundImage: \"url('/terra-form/img/FondoDiameter.jpg')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n\r\n            \"@media (max-width: 850px)\": {\r\n\r\n                height: \"auto\"\r\n\r\n            }\r\n\r\n        },\r\n\r\n        subOne: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingTop: \"5%\"\r\n\r\n        },\r\n        subTwo: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingBottom: \"5%\"\r\n\r\n        },\r\n\r\n        elementPick: {\r\n\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            boxSizing: \"border-box\"\r\n\r\n        },\r\n\r\n    },\r\n  );\r\n\r\nexport const DiameterPicker = () => {\r\n\r\n\r\n\r\n    const globalContext = React.useContext(PlanetContext);\r\n    const classes = useStyles();\r\n\r\n    const handlePlanSize = (ev, newValue) => {\r\n\r\n\r\n        globalContext.setConfig({\r\n\r\n            ...globalContext.config,\r\n            sizePlanet: newValue\r\n\r\n        });\r\n\r\n       // console.log(\"planetSize= \"+globalContext.config.sizePlanet)\r\n\r\n\r\n    }\r\n\r\n    const handleAtmosSize = (ev, newValue) => {\r\n\r\n\r\n        globalContext.setConfig({\r\n\r\n            ...globalContext.config,\r\n            sizeAtmosphere: newValue\r\n\r\n        });\r\n\r\n        /*console.log(\"planetAtmosphere= \"+globalContext.config.sizeAtmosphere)*/\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return(<div className={classes.body}>\r\n\r\n        <Plantilla instruction=\"choose the size of the planet and the size of its atmosphere\" back=\"/elementPicker\" next=\"/rotationPicker\">\r\n\r\n        <div className={classes.elementPick}>\r\n\r\n        <div className={classes.subOne}>\r\n         <AppSlider value={globalContext.config.sizePlanet} min ={50} max={80} onChange={handlePlanSize} text=\"Planet Size\" />\r\n        </div>\r\n        <div className={classes.subTwo}>\r\n        <AppSlider value={globalContext.config.sizeAtmosphere}  onChange={handleAtmosSize} text=\"Atmosphere Size\" min={60} max={80}/>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <Planet\r\n\r\n        element={globalContext.config.element}\r\n        elementAtmos={globalContext.config.elementAtmos}\r\n        sizePlanet={globalContext.config.sizePlanet+\"%\"}\r\n        sizeAtmosphere={globalContext.config.sizeAtmosphere+\"%\"}\r\n        senseRotation={globalContext.config.senseRotation}\r\n        velRotation={globalContext.config.velRotation+\"s\"}\r\n\r\n        />\r\n\r\n        </Plantilla>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import * as React from \"react\";\r\nimport { Plantilla } from \"../../componentes/Plantilla/Plantilla\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PlanetContext } from \"../../utils/PlanetContext\";\r\nimport { Planet } from \"../../componentes/Planet/Planet\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AppSlider } from \"../../componentes/AppSlider/AppSlider\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n        body: {\r\n\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"\",\r\n            flexWrap: \"nowrap\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n            backgroundImage: \"url('/terra-form/img/FondoAtmosphere.jpg')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n\r\n            \"@media (max-width: 850px)\": {\r\n\r\n                height: \"auto\"\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        leftButton: {\r\n\r\n            backgroundImage: \"url('/terra-form/img/left.png')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            backgroundColor: \"rgb(0,0,0,0)\",\r\n            width: \"130px\",\r\n            height: \"130px\",\r\n            boxShadow: \"none\",\r\n            marginRight:\"5%\",\r\n\r\n            '&:hover': {\r\n\r\n                backgroundImage: \"url('/terra-form/img/leftHover.png')\",\r\n\r\n                backgroundColor: \"rgb(0,0,0,0)\",\r\n                boxShadow: \"none\"\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        rightButton: {\r\n\r\n            backgroundImage: \"url('/terra-form/img/right.png')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            backgroundColor: \"rgb(0,0,0,0)\",\r\n            width: \"130px\",\r\n            height: \"130px\",\r\n            boxShadow: \"none\",\r\n            marginLeft:\"5%\",\r\n\r\n            '&:hover': {\r\n\r\n                backgroundImage: \"url('/terra-form/img/rightHover.png')\",\r\n\r\n                backgroundColor: \"rgb(0,0,0,0)\",\r\n                boxShadow: \"none\"\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        elementPick: {\r\n\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            boxSizing: \"border-box\"\r\n\r\n        },\r\n\r\n        subOne: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingTop: \"5%\"\r\n\r\n        },\r\n        subTwo: {\r\n\r\n            width: \"100%\",\r\n            height: \"50%\",\r\n            boxSizing: \"border-box\",\r\n\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingBottom: \"5%\"\r\n\r\n        },\r\n\r\n\r\n\r\n    },\r\n  );\r\n\r\nexport const RotationPicker = () => {\r\n\r\n    const globalContext = React.useContext(PlanetContext);\r\n    const classes = useStyles();\r\n\r\n    const handleVelRotation = (ev,newValue) => {\r\n\r\n        globalContext.setConfig({\r\n            ...globalContext.config,\r\n            velRotation: newValue\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleRight = () => {\r\n\r\n\r\n        globalContext.setConfig({\r\n\r\n            ...globalContext.config,\r\n            senseRotation: \"normal\",\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleLeft = () => {\r\n\r\n\r\n        globalContext.setConfig({\r\n\r\n            ...globalContext.config,\r\n            senseRotation: \"reverse\",\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return(<div className={classes.body}>\r\n\r\n        <Plantilla instruction=\"choose the direction of rotation and its speed\" back=\"/diameterPicker\" next=\"/galery\">\r\n\r\n        <div className={classes.elementPick}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.subOne}>\r\n\r\n        <Button disableRipple={true} classes={{root: classes.leftButton}} onClick={handleLeft}>\r\n\r\n            </Button>\r\n\r\n            <Button disableRipple={true} classes={{root: classes.rightButton}} onClick={handleRight}>\r\n\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <div className={classes.subTwo}>\r\n\r\n        <AppSlider  value={globalContext.config.velRotation} min={50} max={200} onChange={handleVelRotation} text=\"Rotation velocity\"/>\r\n\r\n        </div>\r\n\r\n\r\n        </div>\r\n\r\n        <Planet\r\n\r\n        element={globalContext.config.element}\r\n        elementAtmos={globalContext.config.elementAtmos}\r\n        sizePlanet={globalContext.config.sizePlanet+\"%\"}\r\n        sizeAtmosphere={globalContext.config.sizeAtmosphere+\"%\"}\r\n        senseRotation={globalContext.config.senseRotation}\r\n        velRotation={globalContext.config.velRotation+\"s\"}\r\n\r\n        />\r\n\r\n        </Plantilla>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import * as React from \"react\";\r\nimport {Plantilla} from \"../../componentes/Plantilla/Plantilla\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {PlanetContext} from '../../utils/PlanetContext';\r\nimport {Planet} from \"../../componentes/Planet/Planet\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    body: {\r\n\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"\",\r\n        flexWrap: \"nowrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n\r\n        backgroundImage: \"url('/terra-form/img/FondoHome.jpg')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            height: \"auto\"\r\n\r\n        }\r\n\r\n    },\r\n\r\n    planetGalery: {\r\n\r\n        width: \"99%\",\r\n        height: \"85%\",\r\n\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"flex-start\",\r\n        alignContent: \"flex-start\",\r\n        justifyContent: \"flex-start\",\r\n        flexWrap: \"wrap\",\r\n        paddingTop: \"5%\",\r\n        paddingBottom: \"5%\",\r\n        overflow: \"auto\",\r\n\r\n       /* position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",*/\r\n\r\n         /* width */\r\n        \"&::-webkit-scrollbar\": {\r\n            width: \"10px\",\r\n            paddingRight: \"10px\"\r\n        },\r\n\r\n        /* Track */\r\n        \"&::-webkit-scrollbar-track\": {\r\n            background: \"#323455\"\r\n        },\r\n\r\n        /* Handle */\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n            background: \"#B43F90\",\r\n            borderRadius: \"5px\"\r\n        },\r\n\r\n        /* Handle on hover */\r\n        \"&::-webkit-scrollbar-thumb:hover\": {\r\n            background: \"#555\"\r\n        },\r\n\r\n\r\n\r\n        \"@media (max-width: 850px)\": {\r\n\r\n            height: \"auto\"\r\n\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    elementGalery: {\r\n\r\n        width: \"33%\",\r\n        height: \"auto\",\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n\r\n    },\r\n\r\n    edit: {\r\n\r\n        position: \"absolute\",\r\n        top: \"10px\",\r\n        left: \"10px\",\r\n\r\n        backgroundImage: \"url('/terra-form/img/editar.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        backgroundColor: \"rgb(0,0,0,0)\",\r\n        width: \"53px\",\r\n        height: \"53px\",\r\n        boxShadow: \"none\",\r\n\r\n        '&:hover': {\r\n\r\n            backgroundImage: \"url('/terra-form/img/editarHover.png')\",\r\n            backgroundColor: \"rgb(0,0,0,0)\",\r\n            boxShadow: \"none\"\r\n        }\r\n\r\n    },\r\n\r\n    delete: {\r\n\r\n        position: \"absolute\",\r\n        top: \"10px\",\r\n        right: \"10px\",\r\n\r\n        backgroundImage: \"url('/terra-form/img/borrar.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        backgroundColor: \"rgb(0,0,0,0)\",\r\n        width: \"53px\",\r\n        height: \"53px\",\r\n        boxShadow: \"none\",\r\n\r\n        '&:hover': {\r\n\r\n            backgroundImage: \"url('/terra-form/img/borrarHover.png')\",\r\n            backgroundColor: \"rgb(0,0,0,0)\",\r\n            boxShadow: \"none\"\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n    contPreview: {\r\n\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n\r\n}, );\r\n\r\nexport const Galery = () => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const globalContext = React.useContext(PlanetContext);\r\n\r\n    const [selected, setSelected] = React.useState(null);\r\n\r\n    const handleClick = (planet) => {\r\n\r\n        setSelected(planet);\r\n\r\n    }\r\n\r\n    const handleEdit = (elemId) => {\r\n\r\n        //  console.log(elemId);\r\n        // <Redirect to=\"/elementPicker\"/>  <-- por qué no funciona esto?\r\n/*\r\n        const chosen = globalContext.planetList.findIndex((elem) => {\r\n\r\n            return elem.id === elemId;\r\n\r\n        });\r\n*/\r\n        /*\r\n\r\n        Hacer esto para borrar el elemento antes de editarlo, va a perder la posición en la lista,\r\n        para ver la otra forma que es comparando el id actual con uno en la lista ir a\r\n        NavButton en la línea 41\r\n\r\n        globalContext.setPlanetList([\r\n\r\n            ...globalContext.planetList.slice(0, chosen),\r\n            ...globalContext.planetList.slice(chosen + 1)\r\n\r\n        ]);\r\n\r\n        setSelected(null);\r\n\r\n        */\r\n\r\n\r\n        globalContext.setConfig(selected);\r\n\r\n\r\n        history.push(\"/elementPicker\");\r\n\r\n    }\r\n\r\n    const handleDelete = (elemId) => {\r\n\r\n\r\n        const chosen = globalContext.planetList.findIndex((elem) => {\r\n\r\n            return elem.id === elemId;\r\n\r\n        });\r\n\r\n\r\n        globalContext.setPlanetList([\r\n\r\n            ...globalContext.planetList.slice(0, chosen),\r\n            ...globalContext.planetList.slice(chosen + 1)\r\n\r\n        ]);\r\n\r\n        setSelected(null);\r\n\r\n        //console.log(elemId);\r\n\r\n\r\n\r\n    }\r\n\r\n    return ( <div className = {classes.body} >\r\n\r\n        {/*console.log(globalContext.planetList)*/ }\r\n\r\n        <Plantilla instruction = \"Here you can watch your creations\" back = \"/rotationPicker\" next = \"/\" >\r\n\r\n\r\n\r\n        <div className = {classes.planetGalery} >\r\n\r\n\r\n\r\n        {globalContext.planetList.map((planet) => {\r\n\r\n                return <Button key = {planet.id} onClick = {() => handleClick(planet)} className = {classes.elementGalery}>\r\n\r\n\r\n                < Planet element = {planet.element} elementAtmos = {planet.elementAtmos} sizePlanet = {planet.sizePlanet + \"%\"}\r\n                sizeAtmosphere = {planet.sizeAtmosphere + \"%\"}\r\n                senseRotation = {planet.senseRotation}\r\n                velRotation = {planet.velRotation + \"s\"}\r\n                />\r\n\r\n\r\n                </Button>\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n         {selected && <div className = {classes.contPreview}>\r\n\r\n\r\n                <Planet\r\n\r\n            element = {selected.element}\r\n            elementAtmos = {selected.elementAtmos}\r\n            sizePlanet = {selected.sizePlanet + \"%\"}\r\n            sizeAtmosphere = {selected.sizeAtmosphere + \"%\"}\r\n            senseRotation = {selected.senseRotation}\r\n            velRotation = {selected.velRotation + \"s\"}\r\n\r\n            />\r\n\r\n            <Button className = {classes.edit} disableRipple = {true} onClick = {() => handleEdit(selected.id)}/>\r\n            <Button className = {classes.delete} disableRipple = {true} onClick = {() => handleDelete(selected.id)}/>\r\n\r\n\r\n            </div>}\r\n\r\n\r\n        </Plantilla>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import React from 'react';\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom';\nimport { Home } from '../Home/Home';\nimport { ElementPicker } from '../ElementPicker/ElementPicker';\nimport { DiameterPicker } from '../DiameterPicker/DiameterPicker';\nimport { RotationPicker} from \"../RotationPicker/RotationPicker\";\nimport { Galery } from '../Galery/Galery';\nimport { PlanetContext } from '../../utils/PlanetContext';\n\n\nfunction App() {\n\n  const [planetList, setPlanetList] = React.useState([\n\n/*\n\n    {\n      id: \"static1\",\n      element: \"/terra-form/img/waterCont.png\",\n      elementAtmos: \"/terra-form/img/waterContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id:\"static2\",\n      element: \"/terra-form/img/fireCont.png\",\n      elementAtmos: \"/terra-form/img/fireContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static3\",\n      element: \"/terra-form/img/waterIsland.png\",\n      elementAtmos: \"/terra-form/img/waterIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static4\",\n      element: \"/terra-form/img/fireIsland.png\",\n      elementAtmos: \"/terra-form/img/fireIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n\n    {\n      id: \"static5\",\n      element: \"/terra-form/img/waterCont.png\",\n      elementAtmos: \"/terra-form/img/waterContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id:\"static6\",\n      element: \"/terra-form/img/fireCont.png\",\n      elementAtmos: \"/terra-form/img/fireContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static7\",\n      element: \"/terra-form/img/waterIsland.png\",\n      elementAtmos: \"/terra-form/img/waterIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static8\",\n      element: \"/terra-form/img/fireIsland.png\",\n      elementAtmos: \"/terra-form/img/fireIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n\n    {\n      id: \"static9\",\n      element: \"/terra-form/img/waterCont.png\",\n      elementAtmos: \"/terra-form/img/waterContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id:\"static10\",\n      element: \"/terra-form/img/fireCont.png\",\n      elementAtmos: \"/terra-form/img/fireContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static11\",\n      element: \"/terra-form/img/waterIsland.png\",\n      elementAtmos: \"/terra-form/img/waterIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static12\",\n      element: \"/terra-form/img/fireIsland.png\",\n      elementAtmos: \"/terra-form/img/fireIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n\n    {\n      id:\"static13\",\n      element: \"/terra-form/img/fireCont.png\",\n      elementAtmos: \"/terra-form/img/fireContAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static14\",\n      element: \"/terra-form/img/waterIsland.png\",\n      elementAtmos: \"/terra-form/img/waterIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n    {\n      id: \"static15\",\n      element: \"/terra-form/img/fireIsland.png\",\n      elementAtmos: \"/terra-form/img/fireIslandAtmos.png\",\n      sizePlanet:65,\n      sizeAtmosphere:65,\n      senseRotation:\"normal\",\n      velRotation:165,\n    },\n\n*/\n  ]);\n\n\n  React.useEffect(()=>{ //leo el local storage sólo al inicio de la aplicación\n\n    const listString = localStorage.getItem(\"list\");\n\n    if (listString !== null){\n\n      setPlanetList(JSON.parse(listString));\n\n    }\n\n\n\n  },[]);\n\n\n  React.useEffect(()=>{ //steo el local storage cada vez que la lista de planetas cambia\n\n    localStorage.setItem(\"list\", JSON.stringify(globalContext.planetList));\n\n    console.log(\"seteo el local\");\n\n  },[planetList]);\n\n\n  const [config, setConfig] = React.useState({\n\n    id: \"\",\n    element: \"/terra-form/img/waterCont.png\",\n    elementAtmos: \"/terra-form/img/waterContAtmos.png\",\n    sizePlanet:65,\n    sizeAtmosphere:65,\n    senseRotation:\"normal\",\n    velRotation:165,\n\n  });\n\n  const globalContext = {\n\n    config: config,\n    setConfig: setConfig,\n    planetList: planetList,\n    setPlanetList: setPlanetList\n\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <PlanetContext.Provider value={globalContext}>\n\n        <HashRouter>\n\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/elementPicker\" exact component={ElementPicker} />\n          <Route path=\"/diameterPicker\" exact component={DiameterPicker} />\n          <Route path=\"/rotationPicker\" exact component={RotationPicker} />\n          <Route path=\"/galery\" exact component={Galery} />\n\n\n        </HashRouter>\n\n\n      </PlanetContext.Provider>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}